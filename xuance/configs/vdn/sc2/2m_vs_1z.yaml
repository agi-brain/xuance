agent: "VDN"  # the learning algorithms_marl
global_state: False
env_name: "StarCraft2"
env_id: "2m_vs_1z"
fps: 15
policy: "Mixing_Q_network"
representation: "Basic_RNN"
vectorize: "Subproc_StarCraft2"
runner: "StarCraft2_Runner"

# recurrent settings for Basic_RNN representation
use_rnn: True
rnn: "GRU"
recurrent_layer_N: 1
fc_hidden_sizes: [64, ]
recurrent_hidden_size: 64
N_recurrent_layers: 1
dropout: 0

representation_hidden_size: [64, ]
q_hidden_size: [64, ]  # the units for each hidden layer
activation: "relu"

seed: 1
parallels: 8
buffer_size: 5000
batch_size: 32
learning_rate: 0.0007
gamma: 0.99  # discount factor
double_q: True  # use double q learning

start_greedy: 1.0
end_greedy: 0.05
decay_step_greedy: 50000
start_training: 1000  # start training after n episodes
running_steps: 1000000  # 1M
training_frequency: 60
sync_frequency: 200

use_grad_clip: False
grad_clip_norm: 0.5
use_parameter_sharing: True
use_actions_mask: True

eval_interval: 10000
test_episode: 16
log_dir: "./logs/vdn/"
model_dir: "./models/vdn/"
