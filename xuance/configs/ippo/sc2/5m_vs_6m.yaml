agent: "IPPO"
env_name: "StarCraft2"
env_id: "5m_vs_6m"
fps: 15
policy: "Categorical_MAAC_Policy"
representation: "Basic_RNN"
vectorize: "Subproc_StarCraft2"
runner: "StarCraft2_Runner"
on_policy: True

# recurrent settings for Basic_RNN representation
use_recurrent: True
rnn: "GRU"
recurrent_layer_N: 1
fc_hidden_sizes: [64, 64, 64]
recurrent_hidden_size: 64
N_recurrent_layers: 1
dropout: 0
normalize: "LayerNorm"
initialize: "orthogonal"
gain: 0.01

actor_hidden_size: []
critic_hidden_size: []
activation: "relu"

seed: 1
parallels: 8
buffer_size: 128
n_epoch: 10
n_minibatch: 1
learning_rate: 0.0007  # 7e-4
weight_decay: 0

vf_coef: 1.0
ent_coef: 0.01
target_kl: 0.25
clip_range: 0.05
clip_type: 1  # Gradient clip for Mindspore: 0: ms.ops.clip_by_value; 1: ms.nn.ClipByNorm()
gamma: 0.99  # discount factor

# tricks
use_linear_lr_decay: False  # if use linear learning rate decay
end_factor_lr_decay: 0.5
use_global_state: False  # if use global state to replace joint observations
use_grad_norm: True  # gradient normalization
max_grad_norm: 10.0
use_value_clip: True  # limit the value range
value_clip_range: 0.05
use_value_norm: True  # use running mean and std to normalize rewards.
use_huber_loss: True  # True: use huber loss; False: use MSE loss.
huber_delta: 10.0
use_advnorm: True  # use advantage normalization.
use_gae: True  # use GAE trick to calculate returns.
gae_lambda: 0.95

start_training: 1
running_steps: 10000000  # 10M
training_frequency: 1

eval_interval: 100000
test_episode: 16
log_dir: "./logs/ippo/"
model_dir: "./models/ippo/"
