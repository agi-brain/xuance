agent: "COMA"  # the learning algorithms_marl
env_name: "StarCraft2"  # Name of the environment.
env_id: "MMM2"
env_seed: 1  # The random seed of the environment.
fps: 15  # Frames per second.
learner: "COMA_Learner"
policy: "Categorical_COMA_Policy"
representation: "Basic_RNN"
vectorize: "Subproc_StarCraft2"
runner: "RunnerStarCraft2"

use_rnn: True  # Whether to use recurrent neural networks.
rnn: "GRU"  # Choice of recurrent networks: GRU or LSTM.
N_recurrent_layers: 1  # Number of recurrent layers.
fc_hidden_sizes: [64, ]
recurrent_hidden_size: 64
dropout: 0  # dropout should be a number in range [0, 1], the probability of an element being zeroed.
normalize: "LayerNorm"
initialize: "orthogonal"
gain: 0.01

actor_hidden_size: [64, ]
critic_hidden_size: [128, 128]
activation: "relu"  # The activation function of each hidden layer.
use_parameter_sharing: True  # If to use parameter sharing for all agents' policies.
use_actions_mask: False  # If to use actions mask for unavailable actions.

seed: 1
parallels: 8
buffer_size: 8
n_epochs: 1
n_minibatch: 1
learning_rate_actor: 0.0007  # Learning rate of actor.
learning_rate_critic: 0.0007  # Learning rate of critic.
weight_decay: 0  # The steps to decay the greedy epsilon.

start_greedy: 0.5
end_greedy: 0.01
decay_step_greedy: 1000000
sync_frequency: 200

vf_coef: 0.1  # Coefficient factor for critic loss.
ent_coef: 0.01  # Coefficient factor for entropy loss.
gamma: 0.95  # Discount factor.

# tricks
use_linear_lr_decay: False  # If to use linear learning rate decay.
end_factor_lr_decay: 0.5  # The end factor for learning rate scheduler.
use_advnorm: False
use_gae: True  # Use GAE trick.
gae_lambda: 0.8  # The GAE lambda.
use_grad_clip: True  # Gradient normalization.
grad_clip_norm: 10.0  # The max norm of the gradient.
clip_type: 1  # Gradient clip for Mindspore: 0: ms.ops.clip_by_value; 1: ms.nn.ClipByNorm().

running_steps: 10000000
eval_interval: 100000
test_episode: 16

log_dir: "./logs/coma/"
model_dir: "./models/coma/"
