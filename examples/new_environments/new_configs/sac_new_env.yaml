dl_toolbox: "torch"  # The deep learning toolbox. Choices: "torch", "mindspore", "tensorlayer"
project_name: "XuanCe_Benchmark"
logger: "tensorboard"  # Choices: tensorboard, wandb.
wandb_user_name: "your_user_name"
render: False
render_mode: 'rgb_array' # Choices: 'human', 'rgb_array'.
fps: 50
test_mode: False
device: "cuda:0"  # Choose an calculating device. PyTorch: "cpu", "cuda:0"; TensorFlow: "cpu"/"CPU", "gpu"/"GPU"; MindSpore: "CPU", "GPU", "Ascend", "Davinci".
distributed_training: False  # Whether to use multi-GPU for distributed training.
master_port: '12355'  # The master port for current experiment when use distributed training.

agent: "SAC"
env_name: "MyNewEnv"
env_id: "new_env_id"
env_seed: 1
vectorize: "DummyVecEnv"
learner: "SAC_Learner"
policy: "Gaussian_SAC"
representation: "Basic_Identical"
runner: "DRL"

representation_hidden_size:
actor_hidden_size: [256, 256]
critic_hidden_size: [256, 256]
activation: "leaky_relu"
activation_action: 'tanh'

seed: 1
parallels: 4  # number of environments
buffer_size: 1000000
batch_size: 256
learning_rate_actor: 0.001
learning_rate_critic: 0.001
gamma: 0.99
alpha: 0.2
use_automatic_entropy_tuning: True
tau: 0.005

training_frequency: 1
running_steps: 1000000
start_training: 10000

use_grad_clip: False  # gradient normalization
clip_type: 1  # Gradient clip for Mindspore: 0: ms.ops.clip_by_value; 1: ms.nn.ClipByNorm()
grad_clip_norm: 0.5
use_actions_mask: False
use_obsnorm: False
use_rewnorm: False
obsnorm_range: 5
rewnorm_range: 5

test_steps: 10000
eval_interval: 10000
test_episode: 5

log_dir: "./logs/sac/"
model_dir: "./models/sac/"
